name: Tests

on:
  push:
    branches: master
  pull_request:
    branches: master

jobs:
  build:
    name: Build (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.11", "3.12"]

    steps:
    - name: Check out source code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup conda environment
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: parmed-dev
        auto-activate-base: false
        environment-file: devtools/environment-dev.yaml
        miniforge-variant: Miniforge3
        python-version: ${{ matrix.python-version }}

    - name: Optionally install AmberTools
      if: ${{ matrix.python-version != 3.12 }}
      shell: bash -l {0}
      run: conda install "ambertools >=20.15" -c conda-forge -yq

    - name: Install and test
      shell: bash -lx {0}
      run: |
        env
        bash -ex devtools/ci/install.sh

    - name: Upload Coverage Results
      uses: codecov/codecov-action@v3
      if: endsWith(github.ref, '/master')
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: test/
        fail_ci_if_error: true
